{"version":3,"sources":["graphics/580b57fbd9996e24bc43c090.png","graphics/580b57fbd9996e24bc43c091.png","graphics/beer-820011_640.jpg","subSites/Index.tsx","subSites/Shops.tsx","subSites/Products.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Index","react_default","a","createElement","Jumbotron","style","backgroundColor","paddingTop","paddingBottom","margin","fluid","Container","Card","bg","border","borderWidth","className","Image","src","beerToGlass","width","rounded","Component","Shops","height","frameBorder","allowFullScreen","Products","cardStyle","Fragment","CardDeck","Img","twoBeers","oneBeer","variant","App","BrowserRouter","basename","Navbar","fixed","expand","NavLink","to","Button","Toggle","aria-controls","Collapse","Nav","size","Route","path","exact","component","padding","bottom","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6365db03.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/580b57fbd9996e24bc43c090.136fe05c.png\";","module.exports = __webpack_public_path__ + \"static/media/580b57fbd9996e24bc43c091.36b5651f.png\";","module.exports = __webpack_public_path__ + \"static/media/beer-820011_640.d1c440fc.jpg\";","import React, { Component } from 'react';\r\nimport { Button, Card, Jumbotron, Container, CardDeck, Navbar, Nav, Image, FormControl, NavDropdown } from 'react-bootstrap';\r\nimport twoBeers from './../graphics/580b57fbd9996e24bc43c090.png'\r\nimport oneBeer from './../graphics/580b57fbd9996e24bc43c091.png'\r\nimport beerToGlass from './../graphics/beer-820011_640.jpg'\r\n\r\nclass Index extends Component {\r\n    render() {\r\n        const headerJumbotronStyle = {\r\n            backgroundColor: \"transparent\",\r\n            paddingTop: \"80px\",\r\n            paddingBottom: \"20px\",\r\n            margin: \"0px\"\r\n          };\r\n\r\n          const jumbotronStyle = {\r\n            backgroundColor: \"transparent\",\r\n            paddingTop: \"0px\",\r\n            paddingBottom: \"20px\",\r\n            margin: \"0px\"\r\n          };\r\n\r\n          const cardStyle = {\r\n            borderWidth: '3px'\r\n          }\r\n\r\n        return <Jumbotron style={headerJumbotronStyle} fluid>\r\n        <Container>\r\n          <Card bg=\"light\" border=\"warning\" style={cardStyle} className=\"text-center p-4\">\r\n            <div className=\"grid-container\">\r\n              <div><Image src={beerToGlass} style={{ width: '70%' }} rounded/></div>\r\n              <div>\r\n                <h1>50+</h1>\r\n                <p>Piw kraftowych</p>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </Container>\r\n      </Jumbotron>\r\n    }\r\n}\r\n\r\nexport default Index;","import React, { Component } from 'react';\r\nimport { Button, Card, Jumbotron, Container, CardDeck, Navbar, Nav, Image, FormControl, NavDropdown } from 'react-bootstrap';\r\nimport twoBeers from './../graphics/580b57fbd9996e24bc43c090.png'\r\nimport oneBeer from './../graphics/580b57fbd9996e24bc43c091.png'\r\nimport beerToGlass from './../graphics/beer-820011_640.jpg'\r\n\r\nclass Shops extends Component {\r\n    render() {\r\n        const headerJumbotronStyle = {\r\n            backgroundColor: \"transparent\",\r\n            paddingTop: \"80px\",\r\n            paddingBottom: \"20px\",\r\n            margin: \"0px\"\r\n          };\r\n\r\n          const jumbotronStyle = {\r\n            backgroundColor: \"transparent\",\r\n            paddingTop: \"0px\",\r\n            paddingBottom: \"20px\",\r\n            margin: \"0px\"\r\n          };\r\n\r\n          const cardStyle = {\r\n            borderWidth: '3px'\r\n          }\r\n\r\n        return <Jumbotron style={headerJumbotronStyle} fluid>\r\n        <Container>\r\n          <Card bg=\"light\" border=\"warning\" style={cardStyle} className=\"text-center p-4\">\r\n            <h1>Odwiedź nas na Górnickiego!</h1>\r\n            <iframe width=\"100%\" height=\"400px\" src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d626.1522285232337!2d17.05488071135112!3d51.11567543726553!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x470fe9d3d97cf061%3A0xc08116d71816dd97!2sG%C3%B3rnickiego+6%2C+50-337+Wroc%C5%82aw!5e0!3m2!1spl!2spl!4v1551622751662\" frameBorder=\"0\" style={{ paddingTop: '5px', border: \"2px\" }} allowFullScreen></iframe>\r\n          </Card>\r\n        </Container>\r\n      </Jumbotron>\r\n    }\r\n}\r\n\r\nexport default Shops;","import React, { Component } from 'react';\r\nimport { Button, Card, Jumbotron, Container, CardDeck, Navbar, Nav, Image, FormControl, NavDropdown } from 'react-bootstrap';\r\nimport twoBeers from './../graphics/580b57fbd9996e24bc43c090.png'\r\nimport oneBeer from './../graphics/580b57fbd9996e24bc43c091.png'\r\nimport beerToGlass from './../graphics/beer-820011_640.jpg'\r\n\r\nclass Products extends Component {\r\n    render() {\r\n        const headerJumbotronStyle = {\r\n            backgroundColor: \"transparent\",\r\n            paddingTop: \"80px\",\r\n            paddingBottom: \"20px\",\r\n            margin: \"0px\"\r\n        };\r\n\r\n        const jumbotronStyle = {\r\n            backgroundColor: \"transparent\",\r\n            paddingTop: \"0px\",\r\n            paddingBottom: \"20px\",\r\n            margin: \"0px\"\r\n          };\r\n\r\n        const cardStyle = {\r\n            borderWidth: '3px'\r\n        }\r\n\r\n        return <>\r\n            <Jumbotron style={headerJumbotronStyle} fluid>\r\n                <Container>\r\n                    <CardDeck>\r\n                        <Card bg=\"light\" border=\"warning\" style={cardStyle} className=\"text-center p-4\">\r\n                            <Card.Img src={twoBeers}></Card.Img>\r\n                            Text\r\n            </Card>\r\n                        <Card bg=\"light\" border=\"warning\" style={cardStyle} className=\"text-center p-4\">\r\n                            <Card.Img src={oneBeer} variant=\"bottom\" style={{ width: '5rem' }}></Card.Img>\r\n                        </Card>\r\n                        <Card bg=\"light\" border=\"warning\" style={cardStyle} className=\"text-center p-4\">\r\n                            Text\r\n            </Card>\r\n                    </CardDeck>\r\n                </Container>\r\n            </Jumbotron>\r\n\r\n            <Jumbotron style={jumbotronStyle} fluid>\r\n                <Container>\r\n                    <CardDeck>\r\n                        <Card bg=\"light\" border=\"warning\" style={cardStyle} className=\"text-center p-4\">\r\n                            <Card.Img src={twoBeers}></Card.Img>\r\n                            Text\r\n            </Card>\r\n                        <Card bg=\"light\" border=\"warning\" style={cardStyle} className=\"text-center p-1\">\r\n                            <Card.Img src={oneBeer} style={{ width: '5rem' }}></Card.Img>\r\n                            Text\r\n            </Card>\r\n                        <Card bg=\"light\" border=\"warning\" style={cardStyle} className=\"text-center p-4\">\r\n                            Text\r\n            </Card>\r\n                    </CardDeck>\r\n                </Container>\r\n            </Jumbotron>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default Products;","import React, { Component } from 'react';\nimport { Button, Card, Jumbotron, Container, CardDeck, Navbar, Nav, Image, FormControl, NavDropdown } from 'react-bootstrap';\nimport './App.css';\n\nimport { BrowserRouter as Router, Route, Link, NavLink } from \"react-router-dom\";\n\nimport Index from './subSites/Index';\nimport Shops from './subSites/Shops';\nimport Products from './subSites/Products';\n\nclass App extends Component {\n  render() {\n    const headerJumbotronStyle = {\n      backgroundColor: \"transparent\",\n      paddingTop: \"80px\",\n      paddingBottom: \"20px\",\n      margin: \"0px\"\n    };\n\n    const jumbotronStyle = {\n      backgroundColor: \"transparent\",\n      paddingTop: \"0px\",\n      paddingBottom: \"20px\",\n      margin: \"0px\"\n    };\n\n    const footerJumbotronStyle2 = {\n      backgroundColor: \"#e6e6e6\",\n      padding: \"20px\",\n      margin: \"0px\",\n      bottom: \"0px\"\n    };\n\n    const cardStyle = {\n      borderWidth: '3px'\n    }\n\n    return (\n      <Router basename={!process.env.NODE_ENV || process.env.NODE_ENV === 'development' ? \"\" : \"Johnny_Promil_v2\"}>\n        <div className=\"App\">\n          <Navbar fixed='top' bg=\"dark\" variant=\"dark\" expand=\"lg\">\n            <Container>\n              <NavLink className=\"nav-link\" to=\"/\"><Button variant=\"danger\">Johnny Promil</Button></NavLink>\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse>\n                <Nav className=\"mr-auto justify-content-end\">\n                  <NavLink className=\"nav-link\" to=\"/\"><Button size=\"sm\" variant=\"warning\">Główna</Button></NavLink>\n                  <NavLink className=\"nav-link\" to=\"/Oferta\"><Button size=\"sm\" variant=\"warning\">Oferta</Button></NavLink>\n                  <NavLink className=\"nav-link\" to=\"/Sklepy\"><Button size=\"sm\" variant=\"warning\">Sklepy</Button></NavLink>\n                </Nav>\n              </Navbar.Collapse>\n            </Container>\n          </Navbar>\n\n          <Route path=\"/\" exact component={Index} />\n          <Route path=\"/Oferta/\" component={Products} />\n          <Route path=\"/Sklepy/\" component={Shops} />\n\n          <Jumbotron style={footerJumbotronStyle2} fluid>\n            <Container>\n              Footer\n          </Container>\n          </Jumbotron>\n        </div>\n      </Router>\n    );\n  }\n}\n\n//<a href=\"https://www.freepik.com/free-photos-vectors/icon\">Icon vector created by winkimages - www.freepik.com</a>\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}